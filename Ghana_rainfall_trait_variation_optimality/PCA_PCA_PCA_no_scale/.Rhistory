setwd("F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
library(stringi)
library(tidyverse)
rm(list=ls())
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               leaf phenology                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setwd("F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
#setwd("~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data")
#pheno<- openxlsx::read.xlsx('F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data/leaftr_ghana_Jesus_051017_Phenology2.xlsx')%>%
pheno<- openxlsx::read.xlsx('~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data/leaftr_ghana_Jesus_051017_Phenology2.xlsx')%>%
rename(Species=!!as.name("Species_JA_trimfinalspace"))%>%
replace_na(list(Phenology='unkown_in_Jesus'))
library(stringi)
library(tidyverse)
rm(list=ls())
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               leaf phenology                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setwd("F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
#setwd("~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data")
pheno<- openxlsx::read.xlsx('F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data/leaftr_ghana_Jesus_051017_Phenology2.xlsx')%>%
#pheno<- openxlsx::read.xlsx('~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data/leaftr_ghana_Jesus_051017_Phenology2.xlsx')%>%
rename(Species=!!as.name("Species_JA_trimfinalspace"))%>%
replace_na(list(Phenology='unkown_in_Jesus'))
add_zero <- function(x){
if (stri_detect_regex(as.character(x),"[0-9]{3}")) {return(x)}
if (stri_detect_regex(as.character(x),"[0-9]{2}")) {return(paste0('0',x))}
if (stri_detect_regex(as.character(x),"[0-9]{1}")) {return(paste0('00',x))}
}
#Species_table<-read.csv("F:/Oxford/Chapter_one/From_imma/Traits/Census_data/Census_table_all_plots_Species_list.csv")
Species_table<-read.csv("~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data/Census_data/Census_table_all_plots_Species_list.csv")
library(stringi)
library(tidyverse)
rm(list=ls())
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               leaf phenology                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setwd("F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
#setwd("~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data")
pheno<- openxlsx::read.xlsx('F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data/leaftr_ghana_Jesus_051017_Phenology2.xlsx')%>%
#pheno<- openxlsx::read.xlsx('~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data/leaftr_ghana_Jesus_051017_Phenology2.xlsx')%>%
rename(Species=!!as.name("Species_JA_trimfinalspace"))%>%
replace_na(list(Phenology='unkown_in_Jesus'))
add_zero <- function(x){
if (stri_detect_regex(as.character(x),"[0-9]{3}")) {return(x)}
if (stri_detect_regex(as.character(x),"[0-9]{2}")) {return(paste0('0',x))}
if (stri_detect_regex(as.character(x),"[0-9]{1}")) {return(paste0('00',x))}
}
Species_table<-read.csv("F:/Oxford/Chapter_one/From_imma/Traits/Census_data/Census_table_all_plots_Species_list.csv")
#Species_table<-read.csv("~/GitHub/Ghana_rainfall_trait_variation_optimality_github/input_data/Census_data/Census_table_all_plots_Species_list.csv")
Species_table$Tree_id <- lapply(Species_table$Tag.No, function(x) add_zero(x))
Species_table<- mutate(Species_table,Tree_code=paste0(plot_code,'-T',Tree_id))
##----------------------------------------------------------------
##                            Turgor                             -
##----------------------------------------------------------------
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
Trait_big_table<-openxlsx::read.xlsx("Overall_trait_raw_data.xlsx",sheet='turgor')%>%
separate("Code", sep='-',into=c("PLOT","TREE","STEM","MONTH","YEAR"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))
colnames(Trait_big_table)[7]<-"Turgor"
Trait_big_table[87,'PLOT']<-'BOB02' #It was BOB01 but looks like a typo mistake
Trait_big_table[96,'PLOT']<-'BOB02' #It was BOB01 but looks like a typo mistake
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD')],by="PLOT_TREE")
Trait_big_table<-drop_na(Trait_big_table,any_of('Species'))%>%
drop_na(Turgor)%>%
mutate(Turgor=log10(-Turgor))%>%
mutate(Outlier_id=outliers::scores((Turgor),type="iqr"))%>%
filter(Outlier_id<1.5)
# Count number of measurements
nom <- Trait_big_table%>%group_by(PLOT)%>%
summarise(NumberOfMeasurements=sum(!is.na(Turgor)))
# Check normal distribution
plot_histogram=qplot(Turgor, data=Trait_big_table, geom="histogram")
plot_histogram
Turgor2<-Trait_big_table
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               Ks                                        ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='Ks')%>%
separate("Sample/Tree.code", sep='-',into=c("PLOT","TREE", "stem"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))%>%
dplyr::rename(Ks=!!as.name("theoretical.conductivity.poorter2010.kg.m-1.s-1.Mpa-1"))%>%
dplyr::rename(Vessel_diameter = !!as.name('hydraulically.weighted.diam.micron'))%>%
mutate(Outlier_id=scores_na(log2(Ks),type="iqr"))%>%
mutate(Ks=ifelse(abs(Outlier_id) < 1.5, Ks, NA))%>%
mutate(Outlier_id=scores_na(log2(Vessel_diameter),type="iqr"))%>%
mutate(Vessel_diameter=ifelse(abs(Outlier_id) < 1.5, Vessel_diameter, NA))
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD')],by="PLOT_TREE")
Trait_big_table<-drop_na(Trait_big_table,any_of('Species'))
Trait_big_table<-drop_na(Trait_big_table,any_of('Ks'))%>%
mutate(Outlier_id=outliers::scores((Ks),type="iqr"))%>%
filter(Outlier_id<1.5)
# Check normal distribution
qplot(Ks, data=Trait_big_table, geom="histogram")
# The data is right-skewed, log transform it
Trait_big_table$Ks=Trait_big_table$Ks/10 # This is to correct unit to kg m???1MPa???1s???1 (following Mencuccini, Maurizio)
Trait_big_table$Ks=Trait_big_table$Ks/10 *1000 /18.02/1000000# This is to correct unit to (mol m-1 s-1 Pa-1)
Trait_big_table$Ks_t <- log10(Trait_big_table$Ks)
Ks<-Trait_big_table
hist(Trait_big_table$Ks_t)
##---------------------------------------------------------------
##                        Vcmax_ACi_25C                         -
##---------------------------------------------------------------
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='VCmax')%>%
separate("File_Name", sep='-',into=c("PLOT","TREE","STEM","TIME"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD')],by="PLOT_TREE")
Trait_big_table<-drop_na(Trait_big_table,any_of('Species'))%>%
drop_na(.,any_of('Vcmax_ACi_25C'))%>%
mutate(Outlier_id=outliers::scores((Vcmax_ACi_25C),type="iqr"))%>%
filter(Outlier_id<1.5)
# Check normal distribution
Trait_big_table$Vcmax_ACi_25C_t <- log10(Trait_big_table$Vcmax_ACi_25C)
qplot(Vcmax_ACi_25C_t, data=Trait_big_table, geom="histogram")
VCmax<-Trait_big_table
##---------------------------------------------------------------
##                            Huber                             -
##---------------------------------------------------------------
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='Huber')%>%
separate("Code", sep='-',into=c("PLOT","TREE","STEM"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))
colnames(Trait_big_table)[5]<-"Huber"
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD')],by="PLOT_TREE")
Trait_big_table<-drop_na(Trait_big_table,any_of('Species'))%>%
mutate(Huber=1/Huber)%>%
mutate(Outlier_id=scores_na((Huber),type="iqr"))%>%
mutate(Huber=ifelse(abs(Outlier_id) < 1.5, Huber, NA))
Trait_big_table<-drop_na(Trait_big_table,any_of('Huber'))
# Check normal distribution
plot_histogram=qplot(Huber, data=Trait_big_table, geom="histogram")
plot_histogram
# The data is right-skewed, log transform it
Trait_big_table$Huber_t <- log10(Trait_big_table$Huber)
plot_histogram=qplot(Huber_t, data=Trait_big_table, geom="histogram")
plot_histogram
Huber<-Trait_big_table
##----------------------------------------------------------------
##                             Asat                             -
##----------------------------------------------------------------
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='Amax')%>%  separate("Leafcode", sep='-',into=c("PLOT","TREE"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))%>%
filter(Light=="Sun")
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD','basal')],by="PLOT_TREE")
# Check normal distribution
plot_histogram=qplot(Asat, data=Trait_big_table, geom="histogram")
plot_histogram
ggsave(plot_histogram,file="Asat_hist.jpg",width = 3, height = 3)
# The data is right-skewed.
Trait_big_table$Asat_t <- log10(Trait_big_table$Asat)
plot_histogram=qplot(Asat_t, data=Trait_big_table, geom="histogram")
plot_histogram
Asat=Trait_big_table
##----------------------------------------------------------------
##                             Chi                             -
##----------------------------------------------------------------
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
get_chi_from_13C<-function(delta_13C){
compensation=42
Ca=404
lower_f=0.016
asss=0.0044
bsss=0.03
delta_13C_air = -8.7 #see reference here https://zenodo.org/record/569501#.YGGCe68zbLs
Big_delta_13C = (delta_13C_air - delta_13C)/(1+delta_13C/1000)
Chi_yunke = (Big_delta_13C/1000 - asss + lower_f * compensation / Ca)/(bsss - asss)
Chi_wang = (Big_delta_13C/1000 - asss) / (0.027 - asss)
return(list(Big_delta_13C,Chi_wang,Chi_yunke))
} #note that delta_13C is in unit 1/1000
Trait_big_table=openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='C13')%>% dplyr::rename(C13=!!as.name(colnames(.)[2]))%>%
separate("ID", sep='-',into=c("PLOT","TREE"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))%>%
mutate(Chi_chi=get_chi_from_13C(C13)[[3]])%>%
left_join(Census_big_table[,c('PLOT_TREE','Species')],by="PLOT_TREE")
CHI_table<-drop_na(Trait_big_table,any_of('Species'))
##----------------------------------------------------------------
##                             tree_height                       -
##----------------------------------------------------------------
Files_to_read_census<-list.files(path = "Census_data", pattern = '*cleaned*', full.names = T) #Input folder
kog_04_tree_height<-openxlsx::read.xlsx('Census_data/Kogyae census main plots(WORK ON THIS).xlsx',sheet='Savanna 1')[,c(22,9)]%>%
mutate(plot_code='KOG_04')
kog_01_tree_height<-openxlsx::read.xlsx('Census_data/Kogyae census main plots(WORK ON THIS).xlsx',sheet='remnant forest 1 ')[,c(20,9)]%>%
mutate(plot_code='KOG_01')
kog_03_tree_height<-openxlsx::read.xlsx('Census_data/Kogyae census main plots(WORK ON THIS).xlsx',sheet='transition')[,c(13,4)]%>%
mutate(plot_code='KOG_03')
colnames(kog_01_tree_height)<-c('Height','Species','plot_code')
colnames(kog_03_tree_height)<-c('Height','Species','plot_code')
colnames(kog_04_tree_height)<-c('Height','Species','plot_code')
kog_tree_height<-rbind(kog_04_tree_height,kog_03_tree_height,kog_01_tree_height)%>%
mutate(Height=as.numeric(Height))%>%
drop_na()
Census_big_table <- lapply(Files_to_read_census, read.csv) %>%
data.table::rbindlist()%>%
filter(plot_code=='ANK_01' |plot_code=='ANK_03' |plot_code=='BOB_01' |plot_code=='BOB_02'|plot_code=='KOG_02')%>%
mutate(year=substr(census_date,1,4))%>%
filter(year==2012)%>%
mutate(census_year_plot=paste0(str_sub(census_date,1,4),plot_code))%>%
mutate(Height=ifelse(plot_code=='BOB_01',exp( 0.6152+ 0.6362*log(DBH4/10)+0.0109*25813371/1000000),Height),
Height=ifelse(plot_code=='BOB_02',exp( 0.6152+ 0.6362*log(DBH4/10)+0.0109*32814313/1000000),Height))%>%
# mutate(Height=ifelse(plot_code=='KOG_02',exp( 0.4619+ 0.6362*log(DBH4/10)+0.0109*21446610/1000000),Height))%>%
filter(Height>0)%>%
#   mutate(Height=ifelse(plot_code=='BOB_01',exp( 0.8946+ 0.6365*log(DBH4/10)),Height),
#        Height=ifelse(plot_code=='BOB_02',exp( 0.8946+ 0.6365*log(DBH4/10)),Height))%>%filter(Height>0)%>%
drop_na(Height)%>%
mutate(plot_code = str_replace_all(plot_code,'KOG_02','KOG_01'))
Tree_height<-rbind(Census_big_table,kog_tree_height,fill=TRUE)%>%
dplyr::select(Species,plot_code,Height)%>%
rename(PLOT=plot_code)
hist(log10(Tree_height$Height))
Tree_height$Height_t <- log10(Tree_height$Height)
##+++++++++++++++++++
##  PCA preparation
##+++++++++++++++++++
### We summarise them by Site_species and do PCA on this scale
### I am now using median
Huber1<-Huber%>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Huber_value=mean(Huber_t,na.rm=T)
)
VCmax1<-VCmax %>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Vcmax_ACi_25C=mean(Vcmax_ACi_25C_t ,na.rm=T))
Turgor1<-Turgor2 %>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Turgor_value=mean(Turgor ,na.rm=T))
Asat1 <- Asat %>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Asat=mean(Asat_t ,na.rm=T))
Ks1 <- Ks %>% drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Ks_value=mean(Ks_t ,na.rm=T))
CHI_1 <- CHI_table %>% drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Chi_value=mean(Chi_chi ,na.rm=T))
Tree_height1 <- Tree_height %>% drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Height_value=max(Height ,na.rm=T))
#species_basal<-read.csv('F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data/Census_data/Census_table_all_plots_Species_list_basal_area.csv')%>%
species_basal<-read.csv('../../input_data/Census_data/Census_table_all_plots_Species_list_basal_area.csv')%>%  mutate(Site=substr(plot_code,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(total_basal=sum(total_basal,na.rm=T))
library(tibble)
library(ade4)
library(factoextra)
library(magrittr)
library(FactoMineR)
library(missRanger)
PCA_table<-full_join(Huber1,Asat1,by="Species_site")%>%
# full_join(Asat1,by="Species_site")%>%
full_join(Ks1,by="Species_site")%>%
full_join(CHI_1,by="Species_site")%>%
separate(col='Species_site',into=c('site','Species'),sep='_',remove =F)%>%
left_join(pheno[,c('Phenology','Species')])
PCA_table_complete<-PCA_table[complete.cases(PCA_table), ]%>%
mutate(Phenology=stringi::stri_replace_all_charclass(Phenology, "\\p{WHITE_SPACE}", ""))%>%
mutate(Phenology=recode(Phenology,"?ed"='Others',"ed"='Others',"de"='Others'))
PCA_table_complete$site<-as.factor(PCA_table_complete$site)
PCA_table_complete$Phenology<-as.factor(PCA_table_complete$Phenology)
PCA_table_complete_hydro<-PCA_table_complete%>%
dplyr::select(Huber_value,Asat,Ks_value,Species_site,Chi_value)%>%
left_join(species_basal)
PCA_table_complete_hydro<- column_to_rownames(PCA_table_complete_hydro,"Species_site")
### Stat looks good
iris.pca <- PCA(PCA_table_complete_hydro[,c('Huber_value','Asat','Ks_value','Chi_value')], graph = FALSE,scale.unit = F,row.w = PCA_table_complete_hydro$total_basal)
var <- get_pca_var(iris.pca)
summary(iris.pca)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(iris.pca, col.var = "black")
fviz_pca_ind(iris.pca,
col.ind = PCA_table_complete$site, # color by groups
palette = "jco",
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE,label='none'
)
fviz_pca_biplot(iris.pca,
col.ind = PCA_table_complete$site, palette = "jco",
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Species")
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(iris.pca, col.var = "black")
fviz_pca_var(iris.pca, col.var = "black",
repel = TRUE,label='none',ggtheme = theme_bw())+
theme (axis.title = element_text(size = 14),
axis.text = element_text(size = 14))
ggsave(filename = 'PCA_variable_Asat.png', device = 'png',width = 4, height = 4)
##+++++++++++++++++++
##  PCA preparation
##+++++++++++++++++++
### We summarise them by Site_species and do PCA on this scale
### I am now using median
Huber1<-Huber%>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Huber_value=mean(Huber_t,na.rm=T)
)
VCmax1<-VCmax %>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Vcmax_ACi_25C=mean(Vcmax_ACi_25C_t ,na.rm=T))
Turgor1<-Turgor2 %>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Turgor_value=mean(Turgor ,na.rm=T))
Asat1 <- Asat %>%drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Asat=mean(Asat_t ,na.rm=T))
Ks1 <- Ks %>% drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Ks_value=mean(Ks_t ,na.rm=T))
CHI_1 <- CHI_table %>% drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Chi_value=mean(Chi_chi ,na.rm=T))
Tree_height1 <- Tree_height %>% drop_na("Species")%>%
mutate(Site=substr(PLOT,1,3))%>%
mutate(Species_site=paste0(Site,'_',Species))%>%
group_by(Species_site)%>%
summarise(Species_site=first(Species_site),
Height_value=max(Height ,na.rm=T))
PCA_table<-full_join(Huber1,Asat1,by="Species_site")%>%
# full_join(Asat1,by="Species_site")%>%
full_join(Ks1,by="Species_site")%>%
full_join(CHI_1,by="Species_site")%>%
separate(col='Species_site',into=c('site','Species'),sep='_',remove =F)%>%
left_join(pheno[,c('Phenology','Species')])
PCA_table_complete<-PCA_table[complete.cases(PCA_table), ]%>%
mutate(Phenology=stringi::stri_replace_all_charclass(Phenology, "\\p{WHITE_SPACE}", ""))%>%
mutate(Phenology=recode(Phenology,"?ed"='Others',"ed"='Others',"de"='Others'))
PCA_table_complete$site<-as.factor(PCA_table_complete$site)
PCA_table_complete$Phenology<-as.factor(PCA_table_complete$Phenology)
PCA_table_complete_hydro<-PCA_table_complete%>%
dplyr::select(Huber_value,Asat,Ks_value,Species_site,Chi_value)%>%
left_join(species_basal)
PCA_table_complete_hydro<- column_to_rownames(PCA_table_complete_hydro,"Species_site")
### Stat looks good
iris.pca <- PCA(PCA_table_complete_hydro[,c('Huber_value','Asat','Ks_value','Chi_value')], graph = FALSE,scale.unit = F,row.w = PCA_table_complete_hydro$total_basal)
var <- get_pca_var(iris.pca)
summary(iris.pca)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(iris.pca, col.var = "black",
repel = TRUE,label='none',ggtheme = theme_bw())+
theme (axis.title = element_text(size = 14),
axis.text = element_text(size = 14))
### Stat looks good
iris.pca <- PCA(PCA_table_complete_hydro[,c('Huber_value','Asat','Ks_value','Chi_value')], graph = FALSE,scale.unit = F)
var <- get_pca_var(iris.pca)
summary(iris.pca)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(iris.pca, col.var = "black",
repel = TRUE,label='none',ggtheme = theme_bw())+
theme (axis.title = element_text(size = 14),
axis.text = element_text(size = 14))
### Stat looks good
iris.pca <- PCA(PCA_table_complete_hydro[,c('Huber_value','Asat','Ks_value','Chi_value')], graph = FALSE,scale.unit = T,row.w = PCA_table_complete_hydro$total_basal)
var <- get_pca_var(iris.pca)
summary(iris.pca)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(iris.pca, col.var = "black",
repel = TRUE,label='none',ggtheme = theme_bw())+
theme (axis.title = element_text(size = 14),
axis.text = element_text(size = 14))
fviz_pca_biplot(iris.pca,
col.ind = PCA_table_complete$site, palette = "jco",
ellipse.type = "confidence",
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Species")
fviz_pca_biplot(iris.pca,
col.ind = PCA_table_complete$site, palette = "jco",
ellipse.type = "confidence",
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Species")
fviz_pca_ind(iris.pca,
col.ind = PCA_table_complete$site, # color by groups
palette = "jco",
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE,label='none'
)
fviz_pca_biplot(iris.pca,
col.ind = PCA_table_complete$Phenology, palette = "jco",
ellipse.type = "confidence",
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Species")
fviz_pca_ind(iris.pca,
col.ind = PCA_table_complete$site, # color by groups
palette = "jco",
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE,label='none'
)
fviz_pca_biplot(iris.pca,
col.ind = PCA_table_complete$site, palette = "jco",
ellipse.type = "confidence",
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Species")
### Stat looks good
iris.pca <- PCA(PCA_table_complete_hydro[,c('Huber_value','Asat','Ks_value','Chi_value')], graph = FALSE,scale.unit = F,row.w = PCA_table_complete_hydro$total_basal)
var <- get_pca_var(iris.pca)
summary(iris.pca)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(iris.pca, col.var = "black",
repel = TRUE,label='none',ggtheme = theme_bw())+
theme (axis.title = element_text(size = 14),
axis.text = element_text(size = 14))
