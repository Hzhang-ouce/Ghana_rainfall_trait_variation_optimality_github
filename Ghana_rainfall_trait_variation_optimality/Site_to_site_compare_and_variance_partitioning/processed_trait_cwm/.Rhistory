# For ANOVA, following https://statdoe.com/step-by-step-barplots-for-one-factor-in-r/
#
rm(list=ls())
library(multcompView)
library(tidyverse)
library(Hmisc)
library(multcomp)
library(vegan)
library(ARTofR)
setwd("G:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
setwd("H:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
weighted.var.se <- function(x, weights, na.rm = TRUE){
var <- Hmisc::wtd.var(x, weights, na.rm)
weights <- sum( (weights / sum(weights))^2 )
sqrt(var*weights)
}
standard_error_calc <- function(x, na.rm=FALSE) {
if (na.rm) x <- na.omit(x)
sqrt(var(x)/length(x))
}
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
species_basal<-read.csv('Census_data/Census_table_all_plots_Species_list_basal_area.csv')
#read data
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='Twig_density')%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))
#setwd('F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/Ghana_rainfall_trait_variation_optimality/Site_to_site_compare_and_variance_partitioning/processed_trait_cwm')
setwd('../Ghana_rainfall_trait_variation_optimality/Site_to_site_compare_and_variance_partitioning/processed_trait_cwm')
#List_of_f<-list.files(pattern = '*_cwd.xlsx$')
library(tidyverse)
library(ggplot2)
library(ggtext)
library(ggsci)
library(ggpubr)
#List_of_f
list1 <- c("Amax_cwd.xlsx","Asat_cwd.xlsx","chi_cwd.xlsx","DResp_cwd.xlsx","Jmax_ACi_25C_cwd.xlsx","Vcmax_ACi_25C_cwd.xlsx",'Specific_StemRespiration_cwd.xlsx','StemRespiration_cwd.xlsx')
# Read in standardized names
SN <- read.csv("StandadizedName.csv")
# Give colours to each plot
cls <- data.frame(plot_code=List_of_site, colour=c("#deebf7","#deebf7","#deebf7","#9ecae1","#9ecae1","#3182bd","#3182bd"))
plot_function <- function(List_of_f) {
# Initialize
points_plot <- list()
for (file_ind in 1:length(List_of_f)) {
cwm_table<-openxlsx::read.xlsx(List_of_f[file_ind])
ylabel_name<-filter(SN, FileName==List_of_f[file_ind])$SN
colnames(cwm_table)[c(1,4)]<-c("plot_code","value")
#cwm_table$standard_dev<-as.numeric(cwm_table$standard_dev)  #change variance into standard deviation
#cwm_table[,2]<-as.numeric(cwm_table[,2])
cwm_table <- left_join(cwm_table, cls, by="plot_code")
cwm_table$plot_code <- factor(cwm_table$plot_code, levels = c("ANK03", "ANK01", "BOB02", "BOB01", "KOG01", "KOG03", "KOG04"))
if (min(cwm_table$value,na.rm=T)>0) {
points_plot[[file_ind]]<-ggplot(cwm_table) +
geom_bar( aes(x=plot_code, y=value), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=plot_code, y=value, ymin=lower, ymax=upper),alpha=0.9, size=1.3,width=0.4)+ theme_bw()+
ylab("")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$value,na.rm=T)*0.8,max(cwm_table$upper,na.rm=T)*1.2)) +
geom_text(y = max(cwm_table$upper)*1.18,aes(x=plot_code, y=value,label=Letters)) +
labs(title = ylabel_name) +
theme(title = element_text(size=9),
plot.title = element_markdown()) +
geom_text(y = max(cwm_table$upper)*1.07,aes(x=plot_code, y=value,label=NumberOfMeasurements), colour="#636363", size=3)+
scale_x_discrete(labels=c('ANK-03','ANK-01','BOB-02','BOB-01','KOG-02','KOG-04','KOG-05'))
}else{
points_plot[[file_ind]]<-ggplot(cwm_table) +
geom_bar( aes(x=plot_code, y=value), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=plot_code, y=value, ymin=lower, ymax=upper),alpha=0.9, size=1.3,width=0.4)+ theme_bw()+
ylab("")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$lower,na.rm=T)*1.2,max(cwm_table$value,na.rm=T)*0.8)) +
geom_text(y = min(cwm_table$lower)*1.18,aes(x=plot_code, y=value,label=Letters)) +
labs(title = ylabel_name) +
theme(title = element_text(size=9),
plot.title = element_markdown()) +
geom_text(y = min(cwm_table$lower)*1.09,aes(x=plot_code, y=value,label=NumberOfMeasurements), colour="#636363", size=3)+
scale_x_discrete(labels=c('ANK-03','ANK-01','BOB-02','BOB-01','KOG-02','KOG-04','KOG-05'))
}
#ggsave(filename = paste0(List_of_f[file_ind],".jpg"),bar_plot_errorbar, width = 4, height = 4)
# points_plot<-ggplot(cwm_table, aes_string(x="PLOT", y=colnames(cwm_table)[2])) +
#   geom_point(
#     color="orange",
#     fill="#69b3a2",
#     shape=21,
#     alpha=0.5,
#     size=6,
#     stroke = 2
#   ) +geom_text(aes(label=plot_code))
#ggsave(filename = paste0(List_of_f[file_ind],".jpg"),points_plot, width = 3, height = 3)
}
return(points_plot)
}
points_plot <- plot_function(list1)
figure <- ggarrange(plotlist=points_plot,
ncol = 4, nrow = 2)
figure
ggsave(filename = "PLOT_trait_variation_overall_new1_new.pdf",figure,height=5, width = 10)
# For ANOVA, following https://statdoe.com/step-by-step-barplots-for-one-factor-in-r/
#
rm(list=ls())
library(multcompView)
library(tidyverse)
library(Hmisc)
library(multcomp)
library(vegan)
library(ARTofR)
setwd("H:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/input_data")
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
weighted.var.se <- function(x, weights, na.rm = TRUE){
var <- Hmisc::wtd.var(x, weights, na.rm)
weights <- sum( (weights / sum(weights))^2 )
sqrt(var*weights)
}
standard_error_calc <- function(x, na.rm=FALSE) {
if (na.rm) x <- na.omit(x)
sqrt(var(x)/length(x))
}
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
species_basal<-read.csv('Census_data/Census_table_all_plots_Species_list_basal_area.csv')
#read data
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='Twig_density')%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
#the left join will bring species to the trait table
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD')],by="PLOT_TREE")
Trait_big_table<-drop_na(Trait_big_table,any_of('Species'))%>%
drop_na(.,any_of('TwigDensity.g.cm3'))%>%
mutate(Outlier_id=outliers::scores((TwigDensity.g.cm3),type="iqr"))%>%
filter(Outlier_id<1.5)%>%
mutate(Species_PLOT = paste0(Species,PLOT))
List_of_site<-c('KOG01','KOG03','KOG04','BOB01','BOB02' ,'ANK01','ANK03')
Trait_big_table<-openxlsx::read.xlsx('Overall_trait_raw_data.xlsx',sheet='Amax')%>%
separate("Leafcode", sep='-',into=c("PLOT","TREE"),remove = F)%>%
mutate(PLOT_TREE=paste0(PLOT,'_',TREE))%>%
filter(Light=="Sun")
#the left join will bring species to the twig density table
Census_big_table<-read.csv("Census_data/Census_table_all_plots_Species_list.csv")%>%
filter(grepl('^[0-9]{1,3}$', Tag.No))%>%
mutate(Tag_ID=sprintf("%03d", as.numeric(Tag.No)))%>%
mutate(PLOT_TREE=paste0(plot_code,'_T',Tag_ID))
Trait_big_table<-left_join(Trait_big_table,Census_big_table[c('Species','PLOT_TREE','WD','basal')],by="PLOT_TREE")%>%
drop_na(any_of('DResp'))%>%
mutate(Outlier_id=outliers::scores((DResp),type="iqr"),
DResp=-DResp)%>%
filter(Outlier_id<1.5)%>%
mutate(Species_PLOT = paste0(Species,PLOT))
# Count number of measurements
nom <- Trait_big_table%>%group_by(PLOT)%>%
summarise(NumberOfMeasurements=sum(!is.na(DResp)))
# Check normal distribution
plot_histogram=qplot(DResp, data=Trait_big_table, geom="histogram")
plot_histogram
ggsave(plot_histogram,file="DResp_hist.jpg",width = 3, height = 3)
Trait_big_table2<-Trait_big_table%>%
left_join(species_basal[,c('Species','total_basal','PLOT')],by=c('Species','PLOT'))%>%
rowwise()%>%
mutate(number_record= (sum(as.vector(Trait_big_table$Species_PLOT)==Species_PLOT)))%>%
# This is to count how many individuals are measured under one species, the basal area is the total basal area for a species in one plot, but in Trait_big_table, only some individuals are presented
mutate(weightsss = total_basal/ number_record)%>%
mutate(PLOT=as.factor(PLOT))
# lm for significant test
mod <- lm(DResp ~ PLOT, data = Trait_big_table2, weights = weightsss)
summary(glht.mod <- glht(mod, mcp(PLOT = "Tukey")))
mod.cld <- cld(glht.mod ,weights = weightsss)
plot(mod.cld)
Letter_significance <- as.data.frame(mod.cld$mcletters$Letters)%>%
rename(Letters=!!as.name('mod.cld$mcletters$Letters'))%>%
rownames_to_column(var='PLOT')
Trait_big_table_cwm<-Trait_big_table2%>%
group_by(PLOT)%>%
summarise(mean_value_trandformed = wtd.mean(DResp,weightsss,na.rm=T),
standard_d_trandformed=weighted.var.se(DResp,weightsss,na.rm=T))%>%
mutate(mean_original = mean_value_trandformed,
upper = (mean_value_trandformed+ standard_d_trandformed),
lower = (mean_value_trandformed- standard_d_trandformed))%>%
left_join(Letter_significance)%>%
left_join(nom, by="PLOT")
openxlsx::write.xlsx(Trait_big_table_cwm,file='../Ghana_rainfall_trait_variation_optimality/Site_to_site_compare_and_variance_partitioning/processed_trait_cwm/DResp_cwd.xlsx')
#setwd('F:/Oxford/Chapter_one/Ghana_rainfall_trait_variation_optimality_github/Ghana_rainfall_trait_variation_optimality/Site_to_site_compare_and_variance_partitioning/processed_trait_cwm')
setwd('../Ghana_rainfall_trait_variation_optimality/Site_to_site_compare_and_variance_partitioning/processed_trait_cwm')
#List_of_f<-list.files(pattern = '*_cwd.xlsx$')
library(tidyverse)
library(ggplot2)
library(ggtext)
library(ggsci)
library(ggpubr)
#List_of_f
list1 <- c("Amax_cwd.xlsx","Asat_cwd.xlsx","chi_cwd.xlsx","DResp_cwd.xlsx","Jmax_ACi_25C_cwd.xlsx","Vcmax_ACi_25C_cwd.xlsx",'Specific_StemRespiration_cwd.xlsx','StemRespiration_cwd.xlsx')
list2 <- c("Huber_cwd.xlsx","Ks_cwd.xlsx","VesselDensity_cwd.xlsx","VesselDiameter_cwd.xlsx","TwigDensity.g.cm3_cwd.xlsx","WD_cwd.xlsx","Turgor_cwd.xlsx","TreeHeight_cwd.xlsx")
list3 <- c("LMA_cwd.xlsx","Narea_cwd.xlsx","Ngkg_cwd.xlsx","Pgkg_cwd.xlsx","Parea_cwd.xlsx")
# Read in standardized names
SN <- read.csv("StandadizedName.csv")
# Give colours to each plot
cls <- data.frame(plot_code=List_of_site, colour=c("#deebf7","#deebf7","#deebf7","#9ecae1","#9ecae1","#3182bd","#3182bd"))
plot_function <- function(List_of_f) {
# Initialize
points_plot <- list()
for (file_ind in 1:length(List_of_f)) {
cwm_table<-openxlsx::read.xlsx(List_of_f[file_ind])
ylabel_name<-filter(SN, FileName==List_of_f[file_ind])$SN
colnames(cwm_table)[c(1,4)]<-c("plot_code","value")
#cwm_table$standard_dev<-as.numeric(cwm_table$standard_dev)  #change variance into standard deviation
#cwm_table[,2]<-as.numeric(cwm_table[,2])
cwm_table <- left_join(cwm_table, cls, by="plot_code")
cwm_table$plot_code <- factor(cwm_table$plot_code, levels = c("ANK03", "ANK01", "BOB02", "BOB01", "KOG01", "KOG03", "KOG04"))
if (min(cwm_table$value,na.rm=T)>0) {
points_plot[[file_ind]]<-ggplot(cwm_table) +
geom_bar( aes(x=plot_code, y=value), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=plot_code, y=value, ymin=lower, ymax=upper),alpha=0.9, size=1.3,width=0.4)+ theme_bw()+
ylab("")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$value,na.rm=T)*0.8,max(cwm_table$upper,na.rm=T)*1.2)) +
geom_text(y = max(cwm_table$upper)*1.18,aes(x=plot_code, y=value,label=Letters)) +
labs(title = ylabel_name) +
theme(title = element_text(size=9),
plot.title = element_markdown()) +
geom_text(y = max(cwm_table$upper)*1.07,aes(x=plot_code, y=value,label=NumberOfMeasurements), colour="#636363", size=3)+
scale_x_discrete(labels=c('ANK-03','ANK-01','BOB-02','BOB-01','KOG-02','KOG-04','KOG-05'))
}else{
points_plot[[file_ind]]<-ggplot(cwm_table) +
geom_bar( aes(x=plot_code, y=value), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=plot_code, y=value, ymin=lower, ymax=upper),alpha=0.9, size=1.3,width=0.4)+ theme_bw()+
ylab("")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$lower,na.rm=T)*1.2,max(cwm_table$value,na.rm=T)*0.8)) +
geom_text(y = min(cwm_table$lower)*1.18,aes(x=plot_code, y=value,label=Letters)) +
labs(title = ylabel_name) +
theme(title = element_text(size=9),
plot.title = element_markdown()) +
geom_text(y = min(cwm_table$lower)*1.09,aes(x=plot_code, y=value,label=NumberOfMeasurements), colour="#636363", size=3)+
scale_x_discrete(labels=c('ANK-03','ANK-01','BOB-02','BOB-01','KOG-02','KOG-04','KOG-05'))
}
#ggsave(filename = paste0(List_of_f[file_ind],".jpg"),bar_plot_errorbar, width = 4, height = 4)
# points_plot<-ggplot(cwm_table, aes_string(x="PLOT", y=colnames(cwm_table)[2])) +
#   geom_point(
#     color="orange",
#     fill="#69b3a2",
#     shape=21,
#     alpha=0.5,
#     size=6,
#     stroke = 2
#   ) +geom_text(aes(label=plot_code))
#ggsave(filename = paste0(List_of_f[file_ind],".jpg"),points_plot, width = 3, height = 3)
}
return(points_plot)
}
points_plot <- plot_function(list1)
figure <- ggarrange(plotlist=points_plot,
ncol = 4, nrow = 2)
figure
# Read in standardized names
SN <- read.csv("StandadizedName.csv")
# Give colours to each plot
cls <- data.frame(plot_code=List_of_site, colour=c("#deebf7","#deebf7","#deebf7","#9ecae1","#9ecae1","#3182bd","#3182bd"))
plot_function <- function(List_of_f) {
# Initialize
points_plot <- list()
for (file_ind in 1:length(List_of_f)) {
cwm_table<-openxlsx::read.xlsx(List_of_f[file_ind])
ylabel_name<-filter(SN, FileName==List_of_f[file_ind])$SN
colnames(cwm_table)[c(1,4)]<-c("plot_code","value")
#cwm_table$standard_dev<-as.numeric(cwm_table$standard_dev)  #change variance into standard deviation
#cwm_table[,2]<-as.numeric(cwm_table[,2])
cwm_table <- left_join(cwm_table, cls, by="plot_code")
cwm_table$plot_code <- factor(cwm_table$plot_code, levels = c("ANK03", "ANK01", "BOB02", "BOB01", "KOG01", "KOG03", "KOG04"))
if (min(cwm_table$value,na.rm=T)>0) {
points_plot[[file_ind]]<-ggplot(cwm_table) +
geom_bar( aes(x=plot_code, y=value), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=plot_code, y=value, ymin=lower, ymax=upper),alpha=0.9, size=1.3,width=0.4)+ theme_bw()+
ylab("")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$value,na.rm=T)*0.8,max(cwm_table$upper,na.rm=T)*1.2)) +
geom_text(y = max(cwm_table$upper)*1.18,aes(x=plot_code, y=value,label=Letters)) +
labs(title = ylabel_name) +
theme(title = element_text(size=9),
plot.title = element_markdown()) +
geom_text(y = max(cwm_table$upper)*1.07,aes(x=plot_code, y=value,label=NumberOfMeasurements), colour="#636363", size=3)+
scale_x_discrete(labels=c('ANK-03','ANK-01','BOB-02','BOB-01','KOG-02','KOG-04','KOG-05'))
}else{
points_plot[[file_ind]]<-ggplot(cwm_table) +
geom_bar( aes(x=plot_code, y=value), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=plot_code, y=value, ymin=lower, ymax=upper),alpha=0.9, size=1.3,width=0.4)+ theme_bw()+
ylab("")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$lower,na.rm=T)*1.2,max(cwm_table$value,na.rm=T)*0.8)) +
geom_text(y = min(cwm_table$lower)*1.18,aes(x=plot_code, y=value,label=Letters)) +
labs(title = ylabel_name) +
theme(title = element_text(size=9),
plot.title = element_markdown()) +
geom_text(y = min(cwm_table$lower)*1.09,aes(x=plot_code, y=value,label=NumberOfMeasurements), colour="#636363", size=3)+
scale_x_discrete(labels=c('ANK-03','ANK-01','BOB-02','BOB-01','KOG-02','KOG-04','KOG-05'))
}
#ggsave(filename = paste0(List_of_f[file_ind],".jpg"),bar_plot_errorbar, width = 4, height = 4)
# points_plot<-ggplot(cwm_table, aes_string(x="PLOT", y=colnames(cwm_table)[2])) +
#   geom_point(
#     color="orange",
#     fill="#69b3a2",
#     shape=21,
#     alpha=0.5,
#     size=6,
#     stroke = 2
#   ) +geom_text(aes(label=plot_code))
#ggsave(filename = paste0(List_of_f[file_ind],".jpg"),points_plot, width = 3, height = 3)
}
return(points_plot)
}
points_plot <- plot_function(list1)
figure <- ggarrange(plotlist=points_plot,
ncol = 4, nrow = 2)
figure
ggsave(filename = "PLOT_trait_variation_overall_new1_new.pdf",figure,height=5, width = 10)
library(tibble)
library(ade4)
library(ade4)
library(factoextra)
library(factoextra)
library(magrittr)
library(magrittr)
library(FactoMineR)
library(FactoMineR)
library(missRanger)
?fviz_pca_biplot
?fviz_pca_ind
?plotellipses
?stat_ellipse
